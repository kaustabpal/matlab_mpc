function [controls] = predict_controls(plan_horizon,agent_state,goal_state,vp,wp,v0,w0,dt)
    w1 = 1;
    w2 = 2; 
    w3 = 3;
    w4 = 100;
    cost = @(u) w1*(norm(predict_goal(u,agent_state,dt,plan_horizon)-goal_state)) ...
        + w2*(norm(diff(u(:,1)))) + w3*(norm(diff(u(:,2)))) + w4*(norm(u(1,1)-vp)+norm(u(1,2)-wp)); 
    
    
     A = [diff(eye(pred_horizon))];
%     A = [A; [-diff(eye(pred_horizon)) zeros(pred_horizon-1,pred_horizon)]];
%     A = [A; [zeros(pred_horizon-1,pred_horizon) diff(eye(pred_horizon))]];
%     A = [A; [zeros(pred_horizon-1,pred_horizon) -diff(eye(pred_horizon))]];

    amin = -3;
    amax = 2;
    alphamax = 0.1;
    alphamin = -0.1;
    
    A = diff(eye(plan_horizon));
    A = [A; -A];
    b = [amax*dt*ones(plan_horizon-1,1) , alphamax*dt*ones(plan_horizon-1,1); -amin*dt*ones(-alphamin*time_sample*ones(pred_horizon-1,1)-1,1), -alphamin*time_sample*ones(pred_horizon-1,1)];
    
    v_ulim = 20*ones(plan_horizon,1); % max velocity = 20
    w_ulim = 0.5*ones(plan_horizon,1); % max abgular vel = 0.1
    v_llim = 0*ones(plan_horizon,1); % min vel = 0
    w_llim = -0.5*ones(plan_horizon,1); % min angular vel = -0.1
    ub = [v_ulim w_ulim];
    lb = [v_llim w_llim];
    options = optimoptions(@fmincon,'Display','iter');
    controls = fmincon(cost,[v0,w0],A,b,[],[],lb,ub,[],options);
end